def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
//    namespace "com.soushin.leisure.boya"
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        dw.res.srcDirs 'src/main/res-dw'
        boya.res.srcDirs 'src/main/res-boya'
        fuyuan.res.srcDirs 'src/main/res-fuyuan'
        shouxin.res.srcDirs 'src/main/res-shouxin'
        aomen.res.srcDirs 'src/main/res-aomen'
        gdvip.res.srcDirs 'src/main/res-gdvip'

    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
//        applicationId "com.soushin.leisure.boya"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 21
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        config {
            keyAlias 'apk'
            keyPassword '12345678'
            storeFile file('../boya.jks')
            storePassword '12345678'
        }
        dw {
            keyAlias 'apk'
            keyPassword '12345678'
            storeFile file('../leisure.jks')
            storePassword '12345678'
        }
        boya {
            keyAlias 'apk'
            keyPassword '12345678'
            storeFile file('../boya.jks')
            storePassword '12345678'
        }
        shouxin {
            keyAlias 'apk'
            keyPassword '12345678'
            storeFile file('../shouxin.jks')
            storePassword '12345678'
        }
        aomen {
            keyAlias 'apk'
            keyPassword '12345678'
            storeFile file('../aomen.jks')
            storePassword '12345678'
        }
        fuyuan {
            keyAlias 'apk'
            keyPassword '12345678'
            storeFile file('../fuyuan.jks')
            storePassword '12345678'
        }
        gdvip {
            keyAlias 'apk'
            keyPassword '12345678'
            storeFile file('../gdvip.jks')
            storePassword '12345678'
        }
    }


    buildTypes {
        release {
//            minifyEnabled true
//            shrinkResources true
//            zipAlignEnabled true
            // 需要移除默认签名
            signingConfig null
            multiDexKeepProguard file('multidex-config.pro')
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            // 需要移除默认签名
            signingConfig null
            multiDexKeepProguard file('multidex-config.pro')
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions = ["dw"]
    // 配置渠道对应appid，还支持配置其他渠道参数
    productFlavors {
        dw{
            applicationId "com.dw.pro.dw"
            namespace "com.dw.pro.dw"
            versionCode 3
            versionName "1.0.3"
            versionCode flutterVersionCode.toInteger()
            versionName flutterVersionName
            signingConfig signingConfigs.dw
            manifestPlaceholders = [
                    package_name: applicationId,
                    JPUSH_PKGNAME: applicationId,
                    JPUSH_APPKEY: "appkey",//NOTE: JPush上注册的包名对应的 Appkey.
                    JPUSH_CHANNEL:"developer-default",
                    flavors_name: "DW国际站",
                    apk_name: "DW International",
            ]
        }
        boya{
            applicationId "com.dw.pro.boya"
            namespace "com.dw.pro.boya"
            versionCode 3
            versionName "1.0.3"
            signingConfig signingConfigs.boya
            manifestPlaceholders = [
                    package_name: applicationId,
                    JPUSH_PKGNAME: applicationId,
                    JPUSH_APPKEY: "appkey",//NOTE: JPush上注册的包名对应的 Appkey.
                    JPUSH_CHANNEL:"developer-default",
                    flavors_name: "博雅",
                    apk_name: "BOYA",
            ]
        }
        fuyuan{
            applicationId "com.dw.pro.fuyuan"
            namespace "com.dw.pro.fuyuan"
            versionCode 3
            versionName "1.0.3"
            versionCode flutterVersionCode.toInteger()
            versionName flutterVersionName
            signingConfig signingConfigs.aomen
            manifestPlaceholders = [
                    package_name: applicationId,
                    JPUSH_PKGNAME: applicationId,
                    JPUSH_APPKEY: "appkey",//NOTE: JPush上注册的包名对应的 Appkey.
                    JPUSH_CHANNEL:"developer-default",
                    flavors_name: "富源国际",
                    apk_name: "FUYUAN",
            ]
        }
        shouxin{
            applicationId "com.dw.pro.shouxin"
            namespace "com.dw.pro.shouxin"
            versionCode 3
            versionName "1.0.3"
            versionCode flutterVersionCode.toInteger()
            versionName flutterVersionName
            signingConfig signingConfigs.shouxin
            manifestPlaceholders = [
                    package_name: applicationId,
                    JPUSH_PKGNAME: applicationId,
                    JPUSH_APPKEY: "appkey",//NOTE: JPush上注册的包名对应的 Appkey.
                    JPUSH_CHANNEL:"developer-default",
                    flavors_name: "守信",
                    apk_name: "SHOUXIN",
            ]
        }
        aomen{
            applicationId "com.dw.pro.aomen"
            namespace "com.dw.pro.aomen"
            versionCode 3
            versionName "1.0.3"
            versionCode flutterVersionCode.toInteger()
            versionName flutterVersionName
            signingConfig signingConfigs.aomen
            manifestPlaceholders = [
                    package_name: applicationId,
                    JPUSH_PKGNAME: applicationId,
                    JPUSH_APPKEY: "appkey",//NOTE: JPush上注册的包名对应的 Appkey.
                    JPUSH_CHANNEL:"developer-default",
                    flavors_name: "澳门",
                    apk_name: "AOMEN",
            ]
        }
        gdvip{
            applicationId "com.dw.pro.gdvip"
            namespace "com.dw.pro.gdvip"
            versionCode 1
            versionName "1.0.1"
            versionCode flutterVersionCode.toInteger()
            versionName flutterVersionName
            signingConfig signingConfigs.aomen
            manifestPlaceholders = [
                    package_name: applicationId,
                    JPUSH_PKGNAME: applicationId,
                    JPUSH_APPKEY: "appkey",//NOTE: JPush上注册的包名对应的 Appkey.
                    JPUSH_CHANNEL:"developer-default",
                    flavors_name: "广东贵宾会",
                    apk_name: "Guangdong Club",
            ]
        }
    }


    android.applicationVariants.all { variant ->
        variant.outputs.all {
            // 自定义文件名{示例：AppName-Flavor-debug-v1.0.0_201807301409}
            outputFileName = "${variant.flavorName}_${variant.buildType.name}_${variant.versionName}_${buildTime()}.apk"
        }
    }

}

static def buildTime() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
